{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/sudoku/sudoku-react-js/src/components/Result.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass Result extends React.Component {\n  render() {\n    const result = this.props.result;\n    let isSuccess = result[0];\n    let userName = result[1];\n    let time = result[2];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(ShowResultMessage, {\n      isSuccess: isSuccess,\n      userName: userName,\n      time: time,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction ShowResultMessage(props) {\n  if (props.isSuccess) {\n    return React.createElement(\"div\", {\n      className: \"alert alert-success sizeDivWarning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Sudoku has been resolved successfully by \", props.userName, \".\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), \"Task completed in \", props.time, \".\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), \"Your result goes to the world rankings.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), \"See you again...\");\n  } else {\n    return React.createElement(\"div\", {\n      className: \"alert alert-danger sizeDivWarning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Sudoku has not been resolved successfully by \", props.userName, \".\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), \"Task not completed. Your were stuck in \", props.time, \".\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), \"Try again...\");\n  }\n\n  return null;\n}\n\nResult.propTypes = {\n  result: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  result: state.result\n});\n\nexport default connect(mapStateToProps, {})(Result);","map":{"version":3,"sources":["/home/huber/Pulpit/sudoku/sudoku-react-js/src/components/Result.js"],"names":["React","connect","PropTypes","Result","Component","render","result","props","isSuccess","userName","time","ShowResultMessage","propTypes","array","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AACjCC,EAAAA,MAAM,GAAG;AAAA,UACGC,MADH,GACc,KAAKC,KADnB,CACGD,MADH;AAGL,QAAIE,SAAS,GAAGF,MAAM,CAAC,CAAD,CAAtB;AACA,QAAIG,QAAQ,GAAGH,MAAM,CAAC,CAAD,CAArB;AACA,QAAII,IAAI,GAAGJ,MAAM,CAAC,CAAD,CAAjB;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AACI,MAAA,SAAS,EAAEE,SADf;AAEI,MAAA,QAAQ,EAAEC,QAFd;AAGI,MAAA,IAAI,EAAEC,IAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AASH;;AAjBgC;;AAoBrC,SAASC,iBAAT,CAA2BJ,KAA3B,EAAkC;AAC9B,MAAGA,KAAK,CAACC,SAAT,EAAoB;AAChB,WACI;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAC8CD,KAAK,CAACE,QADpD,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,wBAGuBF,KAAK,CAACG,IAH7B,OAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,6CAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,qBADJ;AAYH,GAbD,MAaO;AACH,WACI;AAAM,MAAA,SAAS,EAAC,mCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDACkDH,KAAK,CAACE,QADxD,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,6CAG4CF,KAAK,CAACG,IAHlD,OAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAIU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJV,iBADJ;AASH;;AACD,SAAO,IAAP;AACH;;AAEDP,MAAM,CAACS,SAAP,GAAmB;AACfN,EAAAA,MAAM,EAAEJ,SAAS,CAACW;AADH,CAAnB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BT,EAAAA,MAAM,EAAES,KAAK,CAACT;AADgB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACa,eAAD,EAAkB,EAAlB,CAAP,CAA+BX,MAA/B,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass Result extends React.Component {\n    render() {\n        const { result } = this.props;\n\n        let isSuccess = result[0];\n        let userName = result[1];\n        let time = result[2];\n\n        return (\n            <div>\n                <ShowResultMessage \n                    isSuccess={isSuccess} \n                    userName={userName} \n                    time={time} \n                />\n            </div>\n        );\n    }\n}\n\nfunction ShowResultMessage(props) {\n    if(props.isSuccess) {\n        return (\n            <div className=\"alert alert-success sizeDivWarning\">\n                Sudoku has been resolved successfully by {props.userName}.\n                <br />\n                Task completed in {props.time}.\n                <br />\n                Your result goes to the world rankings.\n                <br />\n                <br />\n                See you again...\n            </div>\n        );\n    } else {\n        return (\n            <div  className=\"alert alert-danger sizeDivWarning\">\n                Sudoku has not been resolved successfully by {props.userName}.\n                <br />\n                Task not completed. Your were stuck in {props.time}.\n                <br /><br />\n                Try again...\n            </div>\n        );\n    }\n    return null;\n}\n\nResult.propTypes = {\n    result: PropTypes.array\n}\n\nconst mapStateToProps = state => ({\n    result: state.result\n})\n\nexport default connect(mapStateToProps, {  })(Result);"]},"metadata":{},"sourceType":"module"}