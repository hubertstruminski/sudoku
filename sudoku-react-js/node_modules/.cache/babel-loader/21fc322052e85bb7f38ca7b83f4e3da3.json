{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/sudoku/sudoku-react-js/src/components/Timer.js\";\nimport React from 'react';\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOn: false,\n      seconds: 0,\n      minutes: 0,\n      hours: 0,\n      timeString: ''\n    };\n    this.startTimer = this.startTimer.bind(this);\n    this.showTime = this.showTime.bind(this);\n    this.stopTime = this.stopTime.bind(this);\n  }\n\n  componentDidMount() {\n    this.startTimer();\n  }\n\n  componentWillUnmount() {\n    this.stopTime();\n  }\n\n  startTimer() {\n    this.interval = setInterval(() => {\n      if (this.state.seconds >= 59) {\n        this.setState(prevState => ({\n          minutes: prevState.minutes + 1,\n          seconds: -1\n        }));\n      }\n\n      if (this.state.minutes >= 59) {\n        this.setState(prevState => ({\n          hours: prevState.hours + 1,\n          minutes: -1\n        }));\n      }\n\n      this.setState(prevState => ({\n        seconds: prevState.seconds + 1\n      }));\n    }, 1000);\n    let time = this.showTime();\n    this.setState({\n      timeString: time\n    });\n  }\n\n  stopTime() {\n    clearInterval(this.interval);\n  }\n\n  showTime() {\n    let sec, min, hr;\n\n    if (this.state.seconds < 10) {\n      sec = \"0\" + this.state.seconds;\n    } else {\n      sec = this.state.seconds;\n    }\n\n    if (this.state.minutes < 10) {\n      min = \"0\" + this.state.minutes;\n    } else {\n      min = this.state.minutes;\n    }\n\n    if (this.state.hours < 10) {\n      hr = \"0\" + this.state.hours;\n    } else {\n      hr = this.state.hours;\n    }\n\n    return hr + \":\" + min + \":\" + sec;\n  }\n\n  render() {\n    let time = this.showTime();\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, time);\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["/home/huber/Pulpit/sudoku/sudoku-react-js/src/components/Timer.js"],"names":["React","Timer","Component","constructor","props","state","isOn","seconds","minutes","hours","timeString","startTimer","bind","showTime","stopTime","componentDidMount","componentWillUnmount","interval","setInterval","setState","prevState","time","clearInterval","sec","min","hr","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass Timer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isOn: false,\n            seconds: 0,\n            minutes: 0,\n            hours: 0,\n            timeString: ''\n        }\n        this.startTimer = this.startTimer.bind(this);\n        this.showTime = this.showTime.bind(this);\n        this.stopTime = this.stopTime.bind(this);\n    }\n\n    componentDidMount() {\n        this.startTimer();\n    }\n\n    componentWillUnmount() {\n        this.stopTime();\n    }\n\n    startTimer() {\n        this.interval = setInterval(() => {\n            if(this.state.seconds >= 59) {\n                this.setState(prevState => ({ \n                    minutes: prevState.minutes + 1,\n                    seconds: -1\n                }));\n            }\n            if(this.state.minutes >= 59) {\n                this.setState(prevState => ({\n                    hours: prevState.hours + 1,\n                    minutes: -1\n                }));\n            }\n            this.setState(prevState => ({\n                seconds: prevState.seconds + 1\n            }));\n        }, 1000)\n        let time = this.showTime();\n        this.setState({ timeString: time});\n    }\n\n    stopTime() {\n        clearInterval(this.interval);\n    }\n\n    showTime() {\n        let sec, min, hr;\n\n        if(this.state.seconds < 10) {\n            sec = \"0\" + this.state.seconds;\n        } else {\n            sec = this.state.seconds;\n        }\n\n        if(this.state.minutes < 10) {\n            min = \"0\" + this.state.minutes;\n        } else {\n            min = this.state.minutes;\n        }\n\n        if(this.state.hours < 10) {\n            hr = \"0\" + this.state.hours;\n        } else {\n            hr = this.state.hours;\n        }\n\n        \n        return hr + \":\" + min + \":\" + sec;\n    }\n\n\n    render() {\n        let time = this.showTime();\n\n        return (\n            <span>{time}</span>\n        );\n    }\n}\n\nexport default Timer;"]},"metadata":{},"sourceType":"module"}