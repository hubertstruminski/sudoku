{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/sudoku/sudoku-react-js/src/components/Timer.js\";\nimport React from 'react';\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOn: false,\n      seconds: 0,\n      minutes: 0,\n      hours: 0\n    };\n    this.startTimer = this.startTimer.bind(this);\n    this.showTime = this.showTime.bind(this);\n  }\n\n  componentDidMount() {\n    this.startTimer();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  startTimer() {\n    this.interval = setInterval(() => {\n      if (this.state.seconds >= 59) {\n        this.setState(prevState => ({\n          minutes: prevState.minutes + 1\n        }));\n      }\n\n      if (this.state.minutes >= 59) {\n        this.setState(prevState => ({\n          hours: prevState.hours + 1\n        }));\n      }\n\n      this.setState(prevState => ({\n        seconds: prevState.seconds + 1\n      }), 1000);\n    });\n  }\n\n  showTime() {\n    let sec, min, hr;\n\n    if (this.state.seconds < 10) {\n      sec = \"0\" + this.state.seconds;\n    }\n\n    if (this.state.minutes < 10) {\n      min = \"0\" + this.state.minutes;\n    }\n\n    if (this.state.hours < 10) {\n      hr = \"0\" + this.state.hours;\n    }\n\n    return hr + \":\" + min + \":\" + sec;\n  }\n\n  render() {\n    let time = this.showTime();\n    return React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, time);\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["/home/huber/Pulpit/sudoku/sudoku-react-js/src/components/Timer.js"],"names":["React","Timer","Component","constructor","props","state","isOn","seconds","minutes","hours","startTimer","bind","showTime","componentDidMount","componentWillUnmount","clearInterval","interval","setInterval","setState","prevState","sec","min","hr","render","time"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,KADG;AAETC,MAAAA,OAAO,EAAE,CAFA;AAGTC,MAAAA,OAAO,EAAE,CAHA;AAITC,MAAAA,KAAK,EAAE;AAJE,KAAb;AAMA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChB,SAAKH,UAAL;AACH;;AAEDI,EAAAA,oBAAoB,GAAG;AACnBC,IAAAA,aAAa,CAAC,KAAKC,QAAN,CAAb;AACH;;AAEDN,EAAAA,UAAU,GAAG;AACT,SAAKM,QAAL,GAAgBC,WAAW,CAAC,MAAM;AAC9B,UAAG,KAAKZ,KAAL,CAAWE,OAAX,IAAsB,EAAzB,EAA6B;AACzB,aAAKW,QAAL,CAAcC,SAAS,KAAK;AACxBX,UAAAA,OAAO,EAAEW,SAAS,CAACX,OAAV,GAAoB;AADL,SAAL,CAAvB;AAGH;;AACD,UAAG,KAAKH,KAAL,CAAWG,OAAX,IAAsB,EAAzB,EAA6B;AACzB,aAAKU,QAAL,CAAcC,SAAS,KAAK;AACxBV,UAAAA,KAAK,EAAEU,SAAS,CAACV,KAAV,GAAkB;AADD,SAAL,CAAvB;AAGH;;AACD,WAAKS,QAAL,CAAcC,SAAS,KAAK;AACxBZ,QAAAA,OAAO,EAAEY,SAAS,CAACZ,OAAV,GAAoB;AADL,OAAL,CAAvB,EAEI,IAFJ;AAGH,KAd0B,CAA3B;AAeH;;AAEDK,EAAAA,QAAQ,GAAG;AACP,QAAIQ,GAAJ,EAASC,GAAT,EAAcC,EAAd;;AACA,QAAG,KAAKjB,KAAL,CAAWE,OAAX,GAAqB,EAAxB,EAA4B;AACxBa,MAAAA,GAAG,GAAG,MAAM,KAAKf,KAAL,CAAWE,OAAvB;AACH;;AACD,QAAG,KAAKF,KAAL,CAAWG,OAAX,GAAqB,EAAxB,EAA4B;AACxBa,MAAAA,GAAG,GAAG,MAAM,KAAKhB,KAAL,CAAWG,OAAvB;AACH;;AACD,QAAG,KAAKH,KAAL,CAAWI,KAAX,GAAmB,EAAtB,EAA0B;AACtBa,MAAAA,EAAE,GAAG,MAAM,KAAKjB,KAAL,CAAWI,KAAtB;AACH;;AACD,WAAOa,EAAE,GAAG,GAAL,GAAWD,GAAX,GAAiB,GAAjB,GAAuBD,GAA9B;AACH;;AAGDG,EAAAA,MAAM,GAAG;AACL,QAAIC,IAAI,GAAG,KAAKZ,QAAL,EAAX;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKY,IAAL,CADJ;AAGH;;AA5D+B;;AA+DpC,eAAevB,KAAf","sourcesContent":["import React from 'react';\n\nclass Timer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isOn: false,\n            seconds: 0,\n            minutes: 0,\n            hours: 0\n        }\n        this.startTimer = this.startTimer.bind(this);\n        this.showTime = this.showTime.bind(this);\n    }\n\n    componentDidMount() {\n        this.startTimer();\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    startTimer() {\n        this.interval = setInterval(() => {\n            if(this.state.seconds >= 59) {\n                this.setState(prevState => ({ \n                    minutes: prevState.minutes + 1\n                }));\n            }\n            if(this.state.minutes >= 59) {\n                this.setState(prevState => ({\n                    hours: prevState.hours + 1\n                }));\n            }\n            this.setState(prevState => ({\n                seconds: prevState.seconds + 1\n            }), 1000);\n        })\n    }\n\n    showTime() {\n        let sec, min, hr;\n        if(this.state.seconds < 10) {\n            sec = \"0\" + this.state.seconds;\n        }\n        if(this.state.minutes < 10) {\n            min = \"0\" + this.state.minutes;\n        }\n        if(this.state.hours < 10) {\n            hr = \"0\" + this.state.hours;\n        }\n        return hr + \":\" + min + \":\" + sec;\n    }\n\n\n    render() {\n        let time = this.showTime();\n        return (\n            <h4>{time}</h4>\n        );\n    }\n}\n\nexport default Timer;"]},"metadata":{},"sourceType":"module"}